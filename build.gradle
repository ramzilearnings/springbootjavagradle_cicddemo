buildscript {

    ext{
        springBootVersion='2.2.6.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '2.8'
}

group = 'com.sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

apply plugin:'jacoco'
apply plugin:'java'
apply plugin:'org.springframework.boot'
apply plugin: 'org.sonarqube'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
   // testCompile group: 'junit', name: 'junit', version: '4.12'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile group: 'postgresql',name:'postgresql',version:'9.0-801.jdbc4'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
       exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }



}

sonarqube {
    properties {
        property "sonar.projectKey", "org.sonarqube:springbootjavagradle_cicddemo"
        property "sonar.projectName", "springbootjavagradle_cicddemo"

        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/jacocoXml"
        property "sonar.junit.reportPaths", "$buildDir/test-results/test/"
    }
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled false
        xml.destination file("$buildDir/reports/jacoco/jacocoXml")
    }
}

